from tkinter import *
import tkinter as tk
import tela_consulta
import mysql.connector

banco = mysql.connector.connect(host='localhost', user='root', passwd='', database='clientes')
cursor = banco.cursor()

def cadastro():

    _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
    _fgcolor = '#000000'  # X11 color: 'black'
    _compcolor = 'gray40' # X11 color: #666666
    _ana1color = '#c3c3c3' # Closest X11 color: 'gray76'
    _ana2color = 'beige' # X11 color: #f5f5dc
    _tabfg1 = 'black'
    _tabfg2 = 'black'
    _tabbg1 = 'grey75'
    _tabbg2 = 'grey89'
    _bgmode = 'light'

    class Tela_cadastro():
        def __init__(self, top=None):

            top = tk.Tk()
            top.geometry("600x450+348+126")
            top.minsize(120, 1)
            top.maxsize(3290, 1061)
            top.resizable(1,  1)
            top.title("Bem vindo!")
            top.configure(background="#dbf3fd")
            top.configure(highlightbackground="#d9d9d9")
            top.configure(highlightcolor="black")

            self.top = top
            self.selectedButton = tk.IntVar()
            self.selectedButton.set(1)

            self.pessoa_fisica = tk.Radiobutton(self.top)
            self.pessoa_fisica.place(relx=0.083, rely=0.089, relheight=0.056, relwidth=0.213)
            self.pessoa_fisica.configure(activebackground="beige")
            self.pessoa_fisica.configure(activeforeground="black")
            self.pessoa_fisica.configure(anchor='w')
            self.pessoa_fisica.configure(background="#dbf3fd")
            self.pessoa_fisica.configure(compound='left')
            self.pessoa_fisica.configure(disabledforeground="#a3a3a3")
            self.pessoa_fisica.configure(font="-family {SimSun} -size 12")
            self.pessoa_fisica.configure(foreground="#000000")
            self.pessoa_fisica.configure(highlightbackground="#d9d9d9")
            self.pessoa_fisica.configure(highlightcolor="black")
            self.pessoa_fisica.configure(justify='left')
            self.pessoa_fisica.configure(selectcolor="#d9d9d9")
            self.pessoa_fisica.configure(text='''Pessoa fisica''')
            self.pessoa_fisica.configure(variable=self.selectedButton)
            self.pessoa_fisica.configure(value=1)

            self.pessoa_juridica = tk.Radiobutton(self.top)
            self.pessoa_juridica.place(relx=0.417, rely=0.089, relheight=0.056, relwidth=0.247)
            self.pessoa_juridica.configure(activebackground="beige")
            self.pessoa_juridica.configure(activeforeground="black")
            self.pessoa_juridica.configure(anchor='w')
            self.pessoa_juridica.configure(background="#dbf3fd")
            self.pessoa_juridica.configure(compound='left')
            self.pessoa_juridica.configure(disabledforeground="#a3a3a3")
            self.pessoa_juridica.configure(font="-family {SimSun} -size 12")
            self.pessoa_juridica.configure(foreground="#000000")
            self.pessoa_juridica.configure(highlightbackground="#d9d9d9")
            self.pessoa_juridica.configure(highlightcolor="black")
            self.pessoa_juridica.configure(justify='left')
            self.pessoa_juridica.configure(selectcolor="#d9d9d9")
            self.pessoa_juridica.configure(text='''Pessoa juridica''')
            self.pessoa_juridica.configure(variable=self.selectedButton)
            self.pessoa_juridica.configure(value=2)

            self.botao_tipo_cliente = tk.Button(self.top)
            self.botao_tipo_cliente.place(relx=0.7, rely=0.089, height=24, width=147)
            self.botao_tipo_cliente.configure(activebackground="beige")
            self.botao_tipo_cliente.configure(activeforeground="black")
            self.botao_tipo_cliente.configure(background="#ebfdfe")
            self.botao_tipo_cliente.configure(compound='left')
            self.botao_tipo_cliente.configure(disabledforeground="#a3a3a3")
            self.botao_tipo_cliente.configure(font="-family {SimSun} -size 9")
            self.botao_tipo_cliente.configure(foreground="#000000")
            self.botao_tipo_cliente.configure(highlightbackground="#d9d9d9")
            self.botao_tipo_cliente.configure(highlightcolor="black")
            self.botao_tipo_cliente.configure(pady="0")
            self.botao_tipo_cliente.configure(text='''Seleciona tipo cliente''')
            self.botao_tipo_cliente.configure(command=self.tipo_cliente)

            self.Label_nome = tk.Label(self.top)
            self.Label_nome.place(relx=0.067, rely=0.156, height=21, width=44)
            self.Label_nome.configure(activebackground="#f9f9f9")
            self.Label_nome.configure(anchor='w')
            self.Label_nome.configure(background="#dbf3fd")
            self.Label_nome.configure(compound='left')
            self.Label_nome.configure(disabledforeground="#a3a3a3")
            self.Label_nome.configure(font="-family {SimSun} -size 12")
            self.Label_nome.configure(foreground="#000000")
            self.Label_nome.configure(highlightbackground="#d9d9d9")
            self.Label_nome.configure(highlightcolor="black")
            self.Label_nome.configure(text='''Nome:''')

            self.Label_cpf = tk.Label(self.top)
            self.Label_cpf.place(relx=0.067, rely=0.222, height=21, width=44)
            self.Label_cpf.configure(activebackground="#f9f9f9")
            self.Label_cpf.configure(anchor='w')
            self.Label_cpf.configure(background="#dbf3fd")
            self.Label_cpf.configure(compound='left')
            self.Label_cpf.configure(disabledforeground="#a3a3a3")
            self.Label_cpf.configure(font="-family {SimSun} -size 12")
            self.Label_cpf.configure(foreground="#000000")
            self.Label_cpf.configure(highlightbackground="#d9d9d9")
            self.Label_cpf.configure(highlightcolor="black")
            self.Label_cpf.configure(text='''CPF:''')

            self.Label_nascimento = tk.Label(self.top)
            self.Label_nascimento.place(relx=0.067, rely=0.289, height=21, width=94)
            self.Label_nascimento.configure(activebackground="#f9f9f9")
            self.Label_nascimento.configure(anchor='w')
            self.Label_nascimento.configure(background="#dbf3fd")
            self.Label_nascimento.configure(compound='left')
            self.Label_nascimento.configure(disabledforeground="#a3a3a3")
            self.Label_nascimento.configure(font="-family {SimSun} -size 12")
            self.Label_nascimento.configure(foreground="#000000")
            self.Label_nascimento.configure(highlightbackground="#d9d9d9")
            self.Label_nascimento.configure(highlightcolor="black")
            self.Label_nascimento.configure(text='''Nascimento:''')

            self.Label_telefone = tk.Label(self.top)
            self.Label_telefone.place(relx=0.067, rely=0.356, height=21, width=84)
            self.Label_telefone.configure(activebackground="#f9f9f9")
            self.Label_telefone.configure(anchor='w')
            self.Label_telefone.configure(background="#dbf3fd")
            self.Label_telefone.configure(compound='left')
            self.Label_telefone.configure(disabledforeground="#a3a3a3")
            self.Label_telefone.configure(font="-family {SimSun} -size 12")
            self.Label_telefone.configure(foreground="#000000")
            self.Label_telefone.configure(highlightbackground="#d9d9d9")
            self.Label_telefone.configure(highlightcolor="black")
            self.Label_telefone.configure(text='''Telefone:''')

            self.Label_email = tk.Label(self.top)
            self.Label_email.place(relx=0.067, rely=0.422, height=21, width=64)
            self.Label_email.configure(activebackground="#f9f9f9")
            self.Label_email.configure(anchor='w')
            self.Label_email.configure(background="#dbf3fd")
            self.Label_email.configure(compound='left')
            self.Label_email.configure(disabledforeground="#a3a3a3")
            self.Label_email.configure(font="-family {SimSun} -size 12")
            self.Label_email.configure(foreground="#000000")
            self.Label_email.configure(highlightbackground="#d9d9d9")
            self.Label_email.configure(highlightcolor="black")
            self.Label_email.configure(text='''E-mail:''')

            self.Label_cep = tk.Label(self.top)
            self.Label_cep.place(relx=0.067, rely=0.489, height=21, width=44)
            self.Label_cep.configure(activebackground="#f9f9f9")
            self.Label_cep.configure(anchor='w')
            self.Label_cep.configure(background="#dbf3fd")
            self.Label_cep.configure(compound='left')
            self.Label_cep.configure(disabledforeground="#a3a3a3")
            self.Label_cep.configure(font="-family {SimSun} -size 12")
            self.Label_cep.configure(foreground="#000000")
            self.Label_cep.configure(highlightbackground="#d9d9d9")
            self.Label_cep.configure(highlightcolor="black")
            self.Label_cep.configure(text='''CEP:''')

            self.Label_cnpj = tk.Label(self.top)
            self.Label_cnpj.place(relx=0.533, rely=0.244, height=21, width=64)
            self.Label_cnpj.configure(activebackground="#f9f9f9")
            self.Label_cnpj.configure(anchor='w')
            self.Label_cnpj.configure(background="#dbf3fd")
            self.Label_cnpj.configure(compound='left')
            self.Label_cnpj.configure(disabledforeground="#a3a3a3")
            self.Label_cnpj.configure(font="-family {SimSun} -size 12")
            self.Label_cnpj.configure(foreground="#000000")
            self.Label_cnpj.configure(highlightbackground="#d9d9d9")
            self.Label_cnpj.configure(highlightcolor="black")
            self.Label_cnpj.configure(text='''CNPJ:''')

            self.Label_incricao = tk.Label(self.top)
            self.Label_incricao.place(relx=0.533, rely=0.311, height=21, width=104)
            self.Label_incricao.configure(activebackground="#f9f9f9")
            self.Label_incricao.configure(anchor='w')
            self.Label_incricao.configure(background="#dbf3fd")
            self.Label_incricao.configure(compound='left')
            self.Label_incricao.configure(disabledforeground="#a3a3a3")
            self.Label_incricao.configure(font="-family {SimSun} -size 12")
            self.Label_incricao.configure(foreground="#000000")
            self.Label_incricao.configure(highlightbackground="#d9d9d9")
            self.Label_incricao.configure(highlightcolor="black")
            self.Label_incricao.configure(text='''Ins.Estadual:''')

            self.entry_nome = tk.Entry(self.top)
            self.entry_nome.place(relx=0.15, rely=0.156, height=20, relwidth=0.54)
            self.entry_nome.configure(background="white")
            self.entry_nome.configure(disabledforeground="#a3a3a3")
            self.entry_nome.configure(font="TkFixedFont")
            self.entry_nome.configure(foreground="#000000")
            self.entry_nome.configure(highlightbackground="#d9d9d9")
            self.entry_nome.configure(highlightcolor="black")
            self.entry_nome.configure(insertbackground="black")
            self.entry_nome.configure(selectbackground="#c4c4c4")
            self.entry_nome.configure(selectforeground="black")
            self.entry_nome.config(state='disabled')

            self.entry_cpf = tk.Entry(self.top)
            self.entry_cpf.place(relx=0.133, rely=0.222, height=20, relwidth=0.29)
            self.entry_cpf.configure(background="white")
            self.entry_cpf.configure(disabledforeground="#a3a3a3")
            self.entry_cpf.configure(font="TkFixedFont")
            self.entry_cpf.configure(foreground="#000000")
            self.entry_cpf.configure(highlightbackground="#d9d9d9")
            self.entry_cpf.configure(highlightcolor="black")
            self.entry_cpf.configure(insertbackground="black")
            self.entry_cpf.configure(selectbackground="#c4c4c4")
            self.entry_cpf.configure(selectforeground="black")
            self.entry_cpf.config(state='disabled')

            self.entry_nascimento = tk.Entry(self.top)
            self.entry_nascimento.place(relx=0.233, rely=0.289, height=20, relwidth=0.173)
            self.entry_nascimento.configure(background="white")
            self.entry_nascimento.configure(disabledforeground="#a3a3a3")
            self.entry_nascimento.configure(font="TkFixedFont")
            self.entry_nascimento.configure(foreground="#000000")
            self.entry_nascimento.configure(highlightbackground="#d9d9d9")
            self.entry_nascimento.configure(highlightcolor="black")
            self.entry_nascimento.configure(insertbackground="black")
            self.entry_nascimento.configure(selectbackground="#c4c4c4")
            self.entry_nascimento.configure(selectforeground="black")
            self.entry_nascimento.config(state='disabled')

            self.entry_telefone = tk.Entry(self.top)
            self.entry_telefone.place(relx=0.2, rely=0.356, height=20, relwidth=0.207)
            self.entry_telefone.configure(background="white")
            self.entry_telefone.configure(disabledforeground="#a3a3a3")
            self.entry_telefone.configure(font="TkFixedFont")
            self.entry_telefone.configure(foreground="#000000")
            self.entry_telefone.configure(highlightbackground="#d9d9d9")
            self.entry_telefone.configure(highlightcolor="black")
            self.entry_telefone.configure(insertbackground="black")
            self.entry_telefone.configure(selectbackground="#c4c4c4")
            self.entry_telefone.configure(selectforeground="black")
            self.entry_telefone.config(state='disabled')

            self.entry_inscricao = tk.Entry(self.top)
            self.entry_inscricao.place(relx=0.717, rely=0.311, height=20, relwidth=0.19)
            self.entry_inscricao.configure(background="white")
            self.entry_inscricao.configure(disabledforeground="#a3a3a3")
            self.entry_inscricao.configure(font="TkFixedFont")
            self.entry_inscricao.configure(foreground="#000000")
            self.entry_inscricao.configure(highlightbackground="#d9d9d9")
            self.entry_inscricao.configure(highlightcolor="black")
            self.entry_inscricao.configure(insertbackground="black")
            self.entry_inscricao.configure(selectbackground="#c4c4c4")
            self.entry_inscricao.configure(selectforeground="black")
            self.entry_inscricao.config(state='disabled')

            self.entry_cnpj = tk.Entry(self.top)
            self.entry_cnpj.place(relx=0.617, rely=0.244, height=20, relwidth=0.29)
            self.entry_cnpj.configure(background="white")
            self.entry_cnpj.configure(disabledforeground="#a3a3a3")
            self.entry_cnpj.configure(font="TkFixedFont")
            self.entry_cnpj.configure(foreground="#000000")
            self.entry_cnpj.configure(highlightbackground="#d9d9d9")
            self.entry_cnpj.configure(highlightcolor="black")
            self.entry_cnpj.configure(insertbackground="black")
            self.entry_cnpj.configure(selectbackground="#c4c4c4")
            self.entry_cnpj.configure(selectforeground="black")
            self.entry_cnpj.config(state='disabled')

            self.entry_email = tk.Entry(self.top)
            self.entry_email.place(relx=0.183, rely=0.422, height=20, relwidth=0.307)
            self.entry_email.configure(background="white")
            self.entry_email.configure(disabledforeground="#a3a3a3")
            self.entry_email.configure(font="TkFixedFont")
            self.entry_email.configure(foreground="#000000")
            self.entry_email.configure(highlightbackground="#d9d9d9")
            self.entry_email.configure(highlightcolor="black")
            self.entry_email.configure(insertbackground="black")
            self.entry_email.configure(selectbackground="#c4c4c4")
            self.entry_email.configure(selectforeground="black")
            self.entry_email.config(state='disabled')

            self.entry_cep = tk.Entry(self.top)
            self.entry_cep.place(relx=0.133, rely=0.489, height=20, relwidth=0.157)
            self.entry_cep.configure(background="white")
            self.entry_cep.configure(disabledforeground="#a3a3a3")
            self.entry_cep.configure(font="TkFixedFont")
            self.entry_cep.configure(foreground="#000000")
            self.entry_cep.configure(highlightbackground="#d9d9d9")
            self.entry_cep.configure(highlightcolor="black")
            self.entry_cep.configure(insertbackground="black")
            self.entry_cep.configure(selectbackground="#c4c4c4")
            self.entry_cep.configure(selectforeground="black")
            self.entry_cep.config(state='disabled')

            self.consulta_cadastro = tk.Button(self.top)
            self.consulta_cadastro.place(relx=0.067, rely=0.622, height=54, width=237)
            self.consulta_cadastro.configure(activebackground="beige")
            self.consulta_cadastro.configure(activeforeground="black")
            self.consulta_cadastro.configure(background="#ebfdfe")
            self.consulta_cadastro.configure(compound='left')
            self.consulta_cadastro.configure(disabledforeground="#a3a3a3")
            self.consulta_cadastro.configure(font="-family {SimSun} -size 10")
            self.consulta_cadastro.configure(foreground="#000000")
            self.consulta_cadastro.configure(highlightbackground="#d9d9d9")
            self.consulta_cadastro.configure(highlightcolor="black")
            self.consulta_cadastro.configure(pady="0")
            self.consulta_cadastro.configure(text='''Quero consultar um cadastro''')
            self.consulta_cadastro.configure(command=self.sistema_consulta)

            self.botao_cadastrar = tk.Button(self.top)
            self.botao_cadastrar.place(relx=0.617, rely=0.444, height=34, width=137)
            self.botao_cadastrar.configure(activebackground="beige")
            self.botao_cadastrar.configure(activeforeground="black")
            self.botao_cadastrar.configure(background="#ebfdfe")
            self.botao_cadastrar.configure(compound='left')
            self.botao_cadastrar.configure(disabledforeground="#a3a3a3")
            self.botao_cadastrar.configure(font="-family {SimSun} -size 10")
            self.botao_cadastrar.configure(foreground="#000000")
            self.botao_cadastrar.configure(highlightbackground="#d9d9d9")
            self.botao_cadastrar.configure(highlightcolor="black")
            self.botao_cadastrar.configure(pady="0")
            self.botao_cadastrar.configure(text='''Cadastrar''')
            self.botao_cadastrar.configure(command=self.cadastrar_cliente)

            self.botao_novo_cadastro = tk.Button(self.top)
            self.botao_novo_cadastro.place(relx=0.533, rely=0.622, height=54, width=237)
            self.botao_novo_cadastro.configure(activebackground="beige")
            self.botao_novo_cadastro.configure(activeforeground="black")
            self.botao_novo_cadastro.configure(background="#ebfdfe")
            self.botao_novo_cadastro.configure(compound='left')
            self.botao_novo_cadastro.configure(disabledforeground="#a3a3a3")
            self.botao_novo_cadastro.configure(font="-family {SimSun} -size 10")
            self.botao_novo_cadastro.configure(foreground="#000000")
            self.botao_novo_cadastro.configure(highlightbackground="#d9d9d9")
            self.botao_novo_cadastro.configure(highlightcolor="black")
            self.botao_novo_cadastro.configure(pady="0")
            self.botao_novo_cadastro.configure(text='''Novo Cadastro''')
            self.botao_novo_cadastro.configure(command=self.novo_cadastro)

            top.mainloop()

        def tipo_cliente(self):
            global tipo
            tipo = self.selectedButton.get()
            if (tipo == 1):
                self.entry_nome.config(state='normal')
                self.entry_cpf.config(state='normal')
                self.entry_nascimento.config(state='normal')
                self.entry_telefone.config(state='normal')
                self.entry_email.config(state='normal')
                self.entry_cep.config(state='normal')
                self.entry_cnpj.config(state='disable')
                self.entry_inscricao.config(state='disable')
            elif(tipo == 2):
                self.entry_nome.config(state='normal')
                self.entry_nascimento.config(state='normal')
                self.entry_telefone.config(state='normal')
                self.entry_email.config(state='normal')
                self.entry_cep.config(state='normal')
                self.entry_cnpj.config(state='normal')
                self.entry_inscricao.config(state='normal')
                self.entry_cpf.config(state='disable')

        def sistema_consulta(self):
            self.top.destroy()
            tela_consulta.tela_consulta()

        def novo_cadastro(self):
            self.entry_nome.config(state='normal')
            self.entry_cpf.config(state='normal')
            self.entry_nascimento.config(state='normal')
            self.entry_telefone.config(state='normal')
            self.entry_email.config(state='normal')
            self.entry_cep.config(state='normal')
            self.entry_cnpj.config(state='normal')
            self.entry_inscricao.config(state='normal')

            self.entry_nome.delete(0, END)
            self.entry_cpf.delete(0, END)
            self.entry_nascimento.delete(0, END)
            self.entry_telefone.delete(0, END)
            self.entry_email.delete(0, END)
            self.entry_cep.delete(0, END)
            self.entry_cnpj.delete(0, END)
            self.entry_inscricao.delete(0, END)

            self.entry_nome.config(state='disable')
            self.entry_cpf.config(state='disable')
            self.entry_nascimento.config(state='disable')
            self.entry_telefone.config(state='disable')
            self.entry_email.config(state='disable')
            self.entry_cep.config(state='disable')
            self.entry_cnpj.config(state='disable')
            self.entry_inscricao.config(state='disable')

        def cadastrar_cliente(self):
            global salva_nome
            global salva_cpf
            global salva_nascimento
            global salva_telefone
            global salva_email
            global salva_cep
            global salva_cnpj
            global salva_inscricao

            salva_nome = self.entry_nome.get()
            salva_cpf = self.entry_cpf.get()
            salva_nascimento = self.entry_nascimento.get()
            salva_telefone = self.entry_telefone.get()
            salva_email = self.entry_email.get()
            salva_cep = self.entry_cep.get()
            salva_cnpj = self.entry_cnpj.get()
            salva_inscricao = self.entry_inscricao.get()

            if (tipo == 1):
                dados = (str(salva_nome), str(salva_cpf), str(salva_nascimento), str(salva_telefone), str(salva_email),
                         str(salva_cep))
                insert_banco = 'INSERT INTO cliente_fisicos (nome, cpf, nascimento, telefone, email, cep) VALUES (%s, %s, %s, %s, %s, %s)'
                cursor.execute(insert_banco, dados)
                banco.commit()

                self.entry_nome.config(state='disable')
                self.entry_cpf.config(state='disable')
                self.entry_nascimento.config(state='disable')
                self.entry_telefone.config(state='disable')
                self.entry_email.config(state='disable')
                self.entry_cep.config(state='disable')

            elif (tipo == 2):
                dados = (str(salva_nome), str(salva_nascimento), str(salva_telefone), str(salva_email),
                         str(salva_cep), str(salva_cnpj), str(salva_inscricao))
                insert_banco = 'INSERT INTO cliente_juridicos (nome, nascimento, telefone, email, cep, cnpj, inscricao) VALUES (%s, %s, %s, %s, %s, %s, %s)'
                cursor.execute(insert_banco, dados)
                banco.commit()

                self.entry_nome.config(state='disable')
                self.entry_nascimento.config(state='disable')
                self.entry_telefone.config(state='disable')
                self.entry_email.config(state='disable')
                self.entry_cep.config(state='disable')
                self.entry_cnpj.config(state='disable')
                self.entry_inscricao.config(state='disable')



    Tela_cadastro()
